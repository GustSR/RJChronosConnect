"""Cria schema inicial v2

Revision ID: eb80c7938475
Revises: 
Create Date: 2025-09-08 20:59:06.433305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eb80c7938475'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('device_statuses',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('log_levels',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('olts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_index(op.f('ix_olts_name'), 'olts', ['name'], unique=True)
    op.create_table('subscribers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('cpf_cnpj', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address_street', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscribers_cpf_cnpj'), 'subscribers', ['cpf_cnpj'], unique=True)
    op.create_index(op.f('ix_subscribers_full_name'), 'subscribers', ['full_name'], unique=False)
    op.create_table('task_statuses',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('task_types',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('olt_ports',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('olt_id', sa.BigInteger(), nullable=False),
    sa.Column('slot', sa.Integer(), nullable=False),
    sa.Column('port_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['olt_id'], ['olts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('serial_number', sa.String(), nullable=False),
    sa.Column('mac_address', postgresql.MACADDR(), nullable=True),
    sa.Column('genieacs_id', sa.String(), nullable=True),
    sa.Column('subscriber_id', sa.BigInteger(), nullable=False),
    sa.Column('olt_port_id', sa.BigInteger(), nullable=False),
    sa.Column('status_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['olt_port_id'], ['olt_ports.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['device_statuses.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['subscribers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('genieacs_id')
    )
    op.create_index(op.f('ix_devices_serial_number'), 'devices', ['serial_number'], unique=True)
    op.create_table('activity_logs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('subscriber_id', sa.BigInteger(), nullable=True),
    sa.Column('device_id', sa.BigInteger(), nullable=True),
    sa.Column('log_level_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['log_level_id'], ['log_levels.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['subscribers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by_user_id', sa.BigInteger(), nullable=False),
    sa.Column('device_id', sa.BigInteger(), nullable=False),
    sa.Column('task_type_id', sa.BigInteger(), nullable=False),
    sa.Column('status_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['task_statuses.id'], ),
    sa.ForeignKeyConstraint(['task_type_id'], ['task_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('activity_logs')
    op.drop_index(op.f('ix_devices_serial_number'), table_name='devices')
    op.drop_table('devices')
    op.drop_table('olt_ports')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('task_types')
    op.drop_table('task_statuses')
    op.drop_index(op.f('ix_subscribers_full_name'), table_name='subscribers')
    op.drop_index(op.f('ix_subscribers_cpf_cnpj'), table_name='subscribers')
    op.drop_table('subscribers')
    op.drop_index(op.f('ix_olts_name'), table_name='olts')
    op.drop_table('olts')
    op.drop_table('log_levels')
    op.drop_table('device_statuses')
    # ### end Alembic commands ###
