version: '3.8'

# Arquivo base do Docker Compose.
# Contém a definição de todos os serviços, redes e volumes que são comuns
# a todos os ambientes (desenvolvimento, produção, etc.).

services:
  reverse-proxy:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - rjchronos-net
    depends_on:
      - frontend
      - backend
      - genieacs

  frontend:
    build:
      context: ./services/frontend
    networks:
      - rjchronos-net

  backend:
    build:
      context: ./services/backend-api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-app:5432/${POSTGRES_DB}
      - GENIACS_API_URL=http://genieacs:7557/
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - rjchronos-net
    depends_on:
      - db-app

  genieacs:
    build:
      context: ./services/genieacs
    ports:
      - "7547:7547"
      - "7557:7557"
      - "7567:7567"
      - "3001:3000"
    environment:
      - GENIEACS_MONGODB_CONNECTION_URL=mongodb://db-acs:27017/genieacs
      - GENIEACS_REDIS_HOST=redis
      - GENIEACS_UI_JWT_SECRET=${UI_JWT_SECRET}
    networks:
      - rjchronos-net
    depends_on:
      - db-acs
      - redis

  db-app:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - rjchronos-net

  db-acs:
    image: mongo:8.0
    networks:
      - rjchronos-net

  redis:
    image: redis:alpine
    networks:
      - rjchronos-net

volumes:
  postgres_app_data:
  mongo_acs_data:

networks:
  rjchronos-net:
    driver: bridge